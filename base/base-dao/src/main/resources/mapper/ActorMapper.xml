<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.yooonn.explore.basic.dao.ActorMapper">
  <resultMap id="BaseResultMap" type="top.yooonn.explore.basic.dao.model.Actor">
    <!--@mbg.generated-->
    <!--@Table actor-->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="code" jdbcType="VARCHAR" property="code"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="age" jdbcType="INTEGER" property="age"/>
    <result column="gender" jdbcType="TINYINT" property="gender"/>
    <result column="birthday" jdbcType="DATE" property="birthday"/>
    <result column="memo" jdbcType="VARCHAR" property="memo"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="was_delete" jdbcType="BOOLEAN" property="wasDelete"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, code, `name`, age, gender, birthday, memo, create_time, update_time, was_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from actor
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete
    from actor
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.yooonn.explore.basic.dao.model.Actor" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into actor (code, `name`, age,
    gender, birthday, memo,
    create_time, update_time, was_delete)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
    #{gender,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, #{memo,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{wasDelete,jdbcType=BOOLEAN})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.yooonn.explore.basic.dao.model.Actor" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into actor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="wasDelete != null">
        was_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="wasDelete != null">
        #{wasDelete,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.yooonn.explore.basic.dao.model.Actor">
    <!--@mbg.generated-->
    update actor
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="wasDelete != null">
        was_delete = #{wasDelete,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.yooonn.explore.basic.dao.model.Actor">
    <!--@mbg.generated-->
    update actor
    set code = #{code,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    age = #{age,jdbcType=INTEGER},
    gender = #{gender,jdbcType=TINYINT},
    birthday = #{birthday,jdbcType=DATE},
    memo = #{memo,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    was_delete = #{wasDelete,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKeyNoDel" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from actor
    where id = #{id,jdbcType=BIGINT} and was_delete = 0
  </select>
  <select id="selectByGenderAndMinAgeOpt" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from actor
    <where>
      <if test="gender != null and gender &gt; 0">
        and gender = #{gender,jdbcType=INTEGER}
      </if>
      <if test="minAge != null and minAge &gt; 0">
        and age &gt;= #{minAge,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectByGenderAndMinAgeOptNoAnnotated" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from actor
    <where>
      <if test="genderCode != null and genderCode &gt; 0">
        and gender = #{genderCode,jdbcType=INTEGER}
      </if>
      <if test="minAge != null and minAge &gt; 0">
        and age &gt;= #{minAge,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>